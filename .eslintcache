[{"/mnt/c/projects/bookmarkreact/src/index.js":"1","/mnt/c/projects/bookmarkreact/src/Popup.js":"2","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js":"3","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js":"4","/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js":"5","/mnt/c/projects/bookmarkreact/src/components/BarNameInput/BarNameInput.js":"6"},{"size":202,"mtime":1609267824332,"results":"7","hashOfConfig":"8"},{"size":1218,"mtime":1609696496832,"results":"9","hashOfConfig":"8"},{"size":906,"mtime":1609337080221,"results":"10","hashOfConfig":"8"},{"size":784,"mtime":1609340920915,"results":"11","hashOfConfig":"8"},{"size":2700,"mtime":1609340622566,"results":"12","hashOfConfig":"8"},{"size":908,"mtime":1609697071985,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t5d7lv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/projects/bookmarkreact/src/index.js",[],["30","31"],"/mnt/c/projects/bookmarkreact/src/Popup.js",["32","33","34"],"import React, { useState, useEffect } from 'react';\nimport './Popup.css';\nimport './components/BookmarkFolderTable/BookmarkFolderTable.js';\nimport BookmarkFolderTable from './components/BookmarkFolderTable/BookmarkFolderTable.js';\nimport BookmarkService from './services/BookmarkService';\nimport BarNameInput from './components/BarNameInput/BarNameInput'\n\nconst Popup = () => {\n  const [currentBarName, setCurrentBarName] = useState('');\n\n  async function swap() {\n    let newfolderTreeNode = await BookmarkService.createFolderInOtherBookmarks();\n    let result = await BookmarkService.moveBarBookmarks(newfolderTreeNode.id);\n\n    console.log('Test result');\n    console.log(result);\n    // let resultagain = await BookmarkService.moveFolderToBar();\n  }\n\n  useEffect(() => {\n    BookmarkService.fetchCurrentBarName().then((name) => {\n      console.log('Cc c le name : ');\n      console.log(name);\n  \n      setCurrentBarName(name);\n\n      // will catch both null and undefined.\n      if (name == '') {\n        console.log('name c null');\n      }\n    })\n  }, [currentBarName]);\n\n  return (\n    <div className=\"Popup\">\n      <BarNameInput />\n      {/* <BookmarkFolderTable /> */}\n    </div>\n  );\n}\n\nexport default Popup;\n","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js",["35"],"import React, { useState, useEffect } from 'react';\nimport './BookmarkFolderTable.css';\nimport BookmarkFolderRow from '../BookmarkFolderRow/BookmarkFolderRow';\nimport BookmarkService from '../../services/BookmarkService';\n\nconst BookmarkFolderTable = () => {\n    const [listFolders, setListFolders] = useState([]);\n\n    function testUpdate() {\n        alert('Must update');\n    }\n\n    async function fetchAll() {\n        let bookmarks = await BookmarkService.fetchOtherBookmarks();\n        const rows = bookmarks.map((bookmark) => \n            <BookmarkFolderRow \n                key={bookmark.id}\n                callBack={testUpdate} \n                bookmarkNode={bookmark} \n            />\n        );\n        setListFolders(rows)\n    }\n\n    useEffect(() => {\n        fetchAll();\n    }, []);\n\n    return (\n        <ul>\n            {listFolders}\n        </ul>\n    );\n}\n\nexport default BookmarkFolderTable;","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js",["36"],"import React, { useState, useEffect } from 'react';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css'; // optional\nimport BookmarkService from '../../services/BookmarkService';\nimport './BookmarkFolderRow.css';\n\nconst BookmarkFolderRow = (props) => {\n    const [nbBookmarks, setNbBookmarks] = useState(0);\n\n    useEffect(() => {\n        console.log('useE de Row');\n        BookmarkService.countBookmarksInFolder(props.bookmarkNode.id).then((result) => {\n            setNbBookmarks(result);\n        });\n    }, [nbBookmarks]);\n\n    return (\n        <Tippy content={nbBookmarks + ' bookmarks'}>\n            <li onClick={() => {\n                props.callBack();\n            }}>{props.bookmarkNode.title}</li>\n        </Tippy>\n    )\n}\n\nexport default BookmarkFolderRow;","/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js",[],"/mnt/c/projects/bookmarkreact/src/components/BarNameInput/BarNameInput.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":27},{"ruleId":"42","severity":1,"message":"46","line":11,"column":18,"nodeType":"44","messageId":"45","endLine":11,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":28,"column":16,"nodeType":"49","messageId":"50","endLine":28,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":27,"column":8,"nodeType":"53","endLine":27,"endColumn":10,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":15,"column":8,"nodeType":"53","endLine":15,"endColumn":21,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"57","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'BookmarkFolderTable' is defined but never used.","Identifier","unusedVar","'swap' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'props.bookmarkNode.id'. Either include it or remove the dependency array.",["61"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [fetchAll]",{"range":"66","text":"67"},"Update the dependencies array to be: [nbBookmarks, props.bookmarkNode.id]",{"range":"68","text":"69"},[789,791],"[fetchAll]",[528,541],"[nbBookmarks, props.bookmarkNode.id]"]