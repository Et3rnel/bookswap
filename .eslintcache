[{"/mnt/c/projects/bookmarkreact/src/index.js":"1","/mnt/c/projects/bookmarkreact/src/Popup.js":"2","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js":"3","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js":"4","/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js":"5"},{"size":202,"mtime":1609267824332,"results":"6","hashOfConfig":"7"},{"size":311,"mtime":1609326118590,"results":"8","hashOfConfig":"7"},{"size":932,"mtime":1609332499613,"results":"9","hashOfConfig":"7"},{"size":738,"mtime":1609334448832,"results":"10","hashOfConfig":"7"},{"size":617,"mtime":1609269724231,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1t5d7lv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/mnt/c/projects/bookmarkreact/src/index.js",[],["24","25"],"/mnt/c/projects/bookmarkreact/src/Popup.js",[],"/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js",["26"],"import React, { useState, useEffect } from 'react';\nimport './BookmarkFolderTable.css';\nimport BookmarkFolderRow from '../BookmarkFolderRow/BookmarkFolderRow';\nimport BookmarkService from '../../services/BookmarkService';\n\nconst BookmarkFolderTable = () => {\n    const [listFolders, setListFolders] = useState([]);\n\n    function testUpdate() {\n        alert('Must update');\n    }\n\n    async function fetchAll() {\n        let bookmarks = await BookmarkService.fetchOtherBookmarks();\n        const rows = bookmarks.map((bookmark) => \n            <BookmarkFolderRow \n                key={bookmark.id}\n                callBack={testUpdate} \n                bookmarkNode={bookmark} \n            />\n        );\n        setListFolders(rows)\n    }\n\n    useEffect(() => {\n        console.log('0');\n        fetchAll();\n    }, []);\n\n    return (\n        <ul>\n            {listFolders}\n        </ul>\n    );\n}\n\nexport default BookmarkFolderTable;","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js",["27"],"/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":28,"column":8,"nodeType":"34","endLine":28,"endColumn":10,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":14,"column":8,"nodeType":"34","endLine":14,"endColumn":21,"suggestions":"37"},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.","ArrayExpression",["40"],"React Hook useEffect has a missing dependency: 'props.bookmarkNode.id'. Either include it or remove the dependency array.",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},{"desc":"44","fix":"45"},"Update the dependencies array to be: [fetchAll]",{"range":"46","text":"47"},"Update the dependencies array to be: [nbBookmarks, props.bookmarkNode.id]",{"range":"48","text":"49"},[815,817],"[fetchAll]",[482,495],"[nbBookmarks, props.bookmarkNode.id]"]