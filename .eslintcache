[{"/mnt/c/projects/bookmarkreact/src/index.js":"1","/mnt/c/projects/bookmarkreact/src/Popup.js":"2","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js":"3","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js":"4","/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js":"5","/mnt/c/projects/bookmarkreact/src/components/BarNameInput/BarNameInput.js":"6","/mnt/c/projects/bookmarkreact/src/components/BarNameSelect/BarNameSelect.js":"7","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderContainer/BookmarkFolderContainer.js":"8","/mnt/c/projects/bookmarkreact/src/components/BookmarkCurrentBarRow/BookmarkCurrentBarRow.js":"9"},{"size":202,"mtime":1609267824332,"results":"10","hashOfConfig":"11"},{"size":1317,"mtime":1610222510650,"results":"12","hashOfConfig":"11"},{"size":906,"mtime":1609970505871,"results":"13","hashOfConfig":"11"},{"size":748,"mtime":1610222246373,"results":"14","hashOfConfig":"11"},{"size":2859,"mtime":1610221831468,"results":"15","hashOfConfig":"11"},{"size":698,"mtime":1609970854656,"results":"16","hashOfConfig":"11"},{"size":460,"mtime":1610220641281,"results":"17","hashOfConfig":"11"},{"size":559,"mtime":1610222732272,"results":"18","hashOfConfig":"11"},{"size":313,"mtime":1610222879915,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1t5d7lv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/projects/bookmarkreact/src/index.js",[],["44","45"],"/mnt/c/projects/bookmarkreact/src/Popup.js",["46"],"import React, { useState, useEffect } from 'react';\nimport './Popup.css';\nimport './components/BookmarkFolderTable/BookmarkFolderTable.js';\nimport BookmarkService from './services/BookmarkService';\nimport BarNameSelect from './components/BarNameSelect/BarNameSelect';\nimport BookmarkFolderContainer from './components/BookmarkFolderContainer/BookmarkFolderContainer';\n\nconst Popup = () => {\n  const [currentBarName, setCurrentBarName] = useState('');\n\n  async function swap() {\n    let newfolderTreeNode = await BookmarkService.createFolderInOtherBookmarks();\n    let result = await BookmarkService.moveBarBookmarks(newfolderTreeNode.id);\n\n    console.log('Test result');\n    console.log(result);\n    // let resultagain = await BookmarkService.moveFolderToBar();\n  }\n\n  async function updateBarName(barName) {\n    await BookmarkService.setCurrentBarName(barName); // Store the bar name in the browser API\n    setCurrentBarName(barName);\n  }\n\n  useEffect(() => {\n    BookmarkService.fetchCurrentBarName().then((name) => {\n      setCurrentBarName(name);\n    })\n  }, [currentBarName]);\n\n  return (\n    <div className=\"Popup\">\n        {currentBarName\n          ? <BookmarkFolderContainer barName={currentBarName}/>\n          : <BarNameSelect callBack={updateBarName} />\n        }\n    </div>\n  );\n}\n\nexport default Popup;\n","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderTable/BookmarkFolderTable.js",["47"],"import React, { useState, useEffect } from 'react';\nimport './BookmarkFolderTable.css';\nimport BookmarkFolderRow from '../BookmarkFolderRow/BookmarkFolderRow';\nimport BookmarkService from '../../services/BookmarkService';\n\nconst BookmarkFolderTable = () => {\n    const [listFolders, setListFolders] = useState([]);\n\n    function testUpdate() {\n        alert('Must update');\n    }\n\n    async function fetchAll() {\n        let bookmarks = await BookmarkService.fetchOtherBookmarks();\n        const rows = bookmarks.map((bookmark) => \n            <BookmarkFolderRow \n                key={bookmark.id}\n                callBack={testUpdate} \n                bookmarkNode={bookmark} \n            />\n        );\n        setListFolders(rows)\n    }\n\n    useEffect(() => {\n        fetchAll();\n    }, []);\n\n    return (\n        <ul>\n            {listFolders}\n        </ul>\n    );\n}\n\nexport default BookmarkFolderTable;","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderRow/BookmarkFolderRow.js",["48"],"import React, { useState, useEffect } from 'react';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css'; // optional\nimport BookmarkService from '../../services/BookmarkService';\nimport './BookmarkFolderRow.css';\n\nconst BookmarkFolderRow = (props) => {\n    const [nbBookmarks, setNbBookmarks] = useState(0);\n\n    useEffect(() => {\n        BookmarkService.countBookmarksInFolder(props.bookmarkNode.id).then((result) => {\n            setNbBookmarks(result);\n        });\n    }, [nbBookmarks]);\n\n    return (\n        <Tippy content={nbBookmarks + ' bookmarks'}>\n            <li onClick={() => {\n                props.callBack();\n            }}>{props.bookmarkNode.title}</li>\n        </Tippy>\n    )\n}\n\nexport default BookmarkFolderRow;","/mnt/c/projects/bookmarkreact/src/services/BookmarkService.js",[],"/mnt/c/projects/bookmarkreact/src/components/BarNameInput/BarNameInput.js",["49"],"import React, { useState, useEffect } from 'react';\nimport './BarNameInput.css'\n\nconst BarNameInput = (props) => {\n    const [barName, setBarName] = useState(\"Default's bar\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.callBack(barName);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label for=\"barName\">Bar name</label>\n            <input \n                name=\"barName\"\n                type=\"text\" \n                value={barName}\n                onChange={e => setBarName(e.target.value)}\n            />\n            <button type=\"submit\">Start switching bookmarks!</button>\n        </form>\n    )\n}\n\nexport default BarNameInput;","/mnt/c/projects/bookmarkreact/src/components/BarNameSelect/BarNameSelect.js",["50","51"],"import React, { useState, useEffect } from 'react';\nimport BarNameInput from '../BarNameInput/BarNameInput';\n\nconst BarNameSelect = (props) => {\n    const handleBarName = (barName) => {\n        props.callBack(barName);\n    }\n    \n    return (\n        <div>\n            <div class=\"container\">\n                <h1>Name current bar</h1>\n            </div>\n            <BarNameInput callBack={handleBarName}/>\n        </div>\n    )\n}\n\nexport default BarNameSelect;","/mnt/c/projects/bookmarkreact/src/components/BookmarkFolderContainer/BookmarkFolderContainer.js",[],"/mnt/c/projects/bookmarkreact/src/components/BookmarkCurrentBarRow/BookmarkCurrentBarRow.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":18,"nodeType":"58","messageId":"59","endLine":11,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":27,"column":8,"nodeType":"62","endLine":27,"endColumn":10,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":14,"column":8,"nodeType":"62","endLine":14,"endColumn":21,"suggestions":"65"},{"ruleId":"56","severity":1,"message":"66","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"67","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"66","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'swap' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has a missing dependency: 'props.bookmarkNode.id'. Either include it or remove the dependency array.",["71"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [fetchAll]",{"range":"76","text":"77"},"Update the dependencies array to be: [nbBookmarks, props.bookmarkNode.id]",{"range":"78","text":"79"},[789,791],"[fetchAll]",[492,505],"[nbBookmarks, props.bookmarkNode.id]"]